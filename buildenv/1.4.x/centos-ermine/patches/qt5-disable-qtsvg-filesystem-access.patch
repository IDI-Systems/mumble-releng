--- ./qtsvg/src/svg/qsvghandler.cpp
+++ ./qtsvg/src/svg/qsvghandler.cpp
@@ -55,8 +55,6 @@
 #include "qcolor.h"
 #include "qtextformat.h"
 #include "qvector.h"
-#include "qfileinfo.h"
-#include "qfile.h"
 #include "qdebug.h"
 #include "qmath.h"
 #include "qnumeric.h"
@@ -2705,8 +2703,7 @@ static QSvgNode *createImageNode(QSvgNod
         } else {
             qDebug()<<"QSvgHandler::createImageNode: Unrecognized inline image format!";
         }
-    } else
-        image = QImage(filename);
+    }
 
     if (image.isNull()) {
         qDebug()<<"couldn't create image from "<<filename;
@@ -3909,21 +3906,7 @@ bool QSvgHandler::processingInstruction(
             pos = 0;
             pos = rx.indexIn(data, pos);
             QString addr = rx.cap(1);
-            QFileInfo fi(addr);
-            //qDebug()<<"External CSS file "<<fi.absoluteFilePath()<<fi.exists();
-            if (fi.exists()) {
-                QFile file(fi.absoluteFilePath());
-                if (!file.open(QIODevice::ReadOnly | QIODevice::Text)) {
-                    return true;
-                }
-                QByteArray cssData = file.readAll();
-                QString css = QString::fromUtf8(cssData);
-
-                QCss::StyleSheet sheet;
-                QCss::Parser(css).parse(&sheet);
-                m_selector->styleSheets.append(sheet);
-            }
-
+            Q_UNUSED(addr);
         }
     }
 #endif
